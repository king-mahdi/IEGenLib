[
  [
    {
      "Name" : "BCSR_Gauss-Seidel",
      "Input Type" : "IEgenLIB Relation",
      "Relation" : "{[i,j,ii,jj] -> [ip,jp,jjp,iip]: i < ip && ii <= 1 && 0 <= ii && jj <= 1 && 0 <= jj && j < rowptr(i+1) && rowptr(i) <= j && 0 <= i && i < n && 0 <= iip && iip <= 1 && 0 <= jjp && jjp <= 1 && rowptr(ip) <= jp && jp < rowptr(ip+1) && 0 <= ip && ip < n && ip = i && iip = ii}",
      "Expected" : "Not Satisfiable",
      "UFS" :
      [
        { 
           "Name" : "colidx",
           "Domain" : "{[i]:0<=i &&i<nnz}",
           "Range" : "{[j]:0<=j &&j<m}",
           "Bijective" : "false",
           "Monotonicity" : "iegenlib::Monotonic_NONE"
        },
        { 
           "Name" : "rowptr",
           "Domain" : "{[j]:0<=j &&j<m}",
           "Range" : "{[i]:0<=i &&i<nnz}",
           "Bijective" : "false",
           "Monotonicity" : "iegenlib::Monotonic_Increasing"
        }
      ],
      "User Defined" :
      [

      ],
      "Do Not Project Out" :
      [
        "i", "ip"
      ],
      "Remove Constraints" : "0",
      "Comment: Code" : [
                  "Following is the BCSR Gauss-Seidel code. Dependence analysis of",
                  "this code would identify 2 pair of read/write data accesses",
                  "that may produce data dependences. These pairs produce",
                  "four distinct conjunctions considering the ordering of accesses",
                  "(Flow and Anti dependence). Overall, there are 4 distinct",
                  "conjunctions for the complete dependence relation.",
                  "for (int i = 0; i < n; ++i) {",
                  "  for (int ii = 0; ii < BS; ++ii) {",
                  "    sum[ii] = b[i][ii];",
                  "  }",
                  "  for (int j = rowptr[i]; j < rowptr[i + 1]; ++j) {",
                  "    for (int jj = 0; jj < BS; ++jj) {",
                  "      for (int ii = 0; ii < BS; ++ii) {",
                  "S0:     sum[ii] -= values[j][jj][ii]*y[colidx[j]][jj];",
                  "      }",
                  "    }",
                  "  }",
                  "  for (int ii = 0; ii < BS; ++ii) {",
                  "S1: y[i][ii] = 0; ",
                  "  }",
                  "  for (int jj = 0; jj < BS; ++jj) {",
                  "    for (int ii = 0; ii < BS; ++ii) {",
                  "S2:   y[i][ii] += idiag[i][jj][ii]*sum[jj]; ",
                  "    }",
                  "  }",
                  "}"
                  ],
      "Comment: Source of data access in the code for this relation" : [
                    " ",
                    "a write in S1 (y[i][ii]);  a write in S2 (y[i][ii]); "
                  ]
    },
    {
      "Name" : "BCSR_Gauss-Seidel",
      "Input Type" : "IEgenLIB Relation",
      "Relation" : "{[i,j,ii,jj] -> [ip,jp,jjp,iip]: ip <  i && ii <= 1 && 0 <= ii && jj <= 1 && 0 <= jj && j < rowptr(i+1) && rowptr(i) <= j && 0 <= i && i < n && 0 <= iip && iip <= 1 && 0 <= jjp && jjp <= 1 && rowptr(ip) <= jp && jp < rowptr(ip+1) && 0 <= ip && ip < n && ip = i && iip = ii}",
      "Expected" : "Not Satisfiable",
      "Comment: Source of data access in the code for this relation" : [
                    " ",
                    "a write in S1 (y[i][ii]);  a write in S2 (y[i][ii]); "
                  ]
    },
    {
      "Name" : "CSR_Gauss-Seidel",
      "Input Type" : "IEgenLIB Relation",
      "Relation" : "{[i,j,ii,jj] -> [ip,jp,iip,jjp]: ip <  i && ii <= 1 && 0 <= ii && jj <= 1 && 0 <= jj && j < rowptr(i+1) && rowptr(i) <= j && 0 <= i && i < n && 0 <= iip && iip <= 1 && 0 <= jjp && jjp <= 1 && rowptr(ip) <= jp && jp < rowptr(ip+1) && 0 <= ip && ip < n && ip = colidx(j) && iip = jj}",
      "Expected" : "Not Satisfiable",
      "Comment: Source of data access in the code for this relation" : [
                    " ",
                    "a read in S0 (y[colidx[j]][jj]);  a write in S1 (y[i][ii]); "
                  ]
    },
    {
      "Name" : "CSR_Gauss-Seidel",
      "Input Type" : "IEgenLIB Relation",
      "Relation" : "{[i,j,ii,jj] -> [ip,jp,jjp,iip]: ip <  i && ii <= 1 && 0 <= ii && jj <= 1 && 0 <= jj && j < rowptr(i+1) && rowptr(i) <= j && 0 <= i && i < n && 0 <= iip && iip <= 1 && 0 <= jjp && jjp <= 1 && rowptr(ip) <= jp && jp < rowptr(ip+1) && 0 <= ip && ip < n && ip = colidx(j) && iip = jj}",
      "Expected" : "Not Satisfiable",
      "Comment: Source of data access in the code for this relation" : [
                    " ",
                    "a read in S0 (y[colidx[j]][jj]);  a write in S1 (y[i][ii]); "
                  ]
    }
  ]
]
